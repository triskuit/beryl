<?php
define("ACCESS_KEY", "eyJ0dCI6InAiLCJhbGciOiJIUzI1NiIsInR2IjoiMSJ9.eyJkIjoie1wiYVwiOjExMzY4NDksXCJpXCI6NTgwOTM5MyxcImNcIjoyMTEzMzIyLFwidlwiOm51bGwsXCJ1XCI6MjMzNTkwOSxcInJcIjpcIlVTXCIsXCJzXCI6W1wiV1wiLFwiRlwiLFwiSVwiLFwiVVwiLFwiS1wiLFwiQ1wiXSxcInpcIjpbXSxcInRcIjowfSIsImlhdCI6MTU0ODE5MTU2Mn0.2b8W9YIwb0E40ERhlaPpq-myaBMOQSxPUclXSr-ULIA");

function is_get_request() {
  return $_SERVER['REQUEST_METHOD'] ==  'GET';
}

function is_post_request() {
  return $_SERVER['REQUEST_METHOD'] ==  'POST';
}

function redirect_to($location) {
  header("Location: " . $location);
  exit;
}

function h($string=""){
  return htmlspecialchars($string);
}

function raw_u($string=""){
  return rawurlencode($string);
}

function u($string="") {
  return urlencode($string);
}

function url_for($script_path) {
  if($script_path[0] != '/') {
    $script_path = "/" . $script_path;
  }
  return WWW_ROOT . $script_path;
}

function display_errors($errors=array()) {
  $output = '';
  if(!empty($errors)) {
    $output .= "<div class=\"errors\">";
    $output .= "Please fix the following errors:";
    $output .= "<ul>";
    foreach($errors as $error) {
      $output .= "<li>" . h($error) . "</li>";
    }
    $output .= "</ul>";
    $output .= "</div>";
  }
  return $output;
}

function require_login() {
  global $session;
  if(!$session->is_logged_in()) {
    $session->message("You must be logged in to do that", "warning");
    redirect_to(url_for('/index.php'));
  } else {
    // Do nothing, let the rest of the page proceed
  }
}

function print_errors($errors){
    $output = "";
    if(!empty($errors)){
        $output .= "<ul>";
        foreach($errors as $e){
            $output .= "<li>$e</li>";
        }
        $output .= "</ul>";
    }
    echo $output;
}

function wrike_update_project_start_date($project_ID, $date){
    // get parent and title
    $project = wrike_get_project_by_ID($project_ID);

    $parent_id = $project['data'][0]['parentIds'][0];
    $project_title = $project['data'][0]['title'];
    
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();
    
    curl_setopt($ch, CURLOPT_URL, "https://www.wrike.com/api/v4/copy_folder/$project_ID");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    curl_setopt($ch, CURLOPT_POSTFIELDS, "parent=$parent_id&title=$project_title&copyParents=false&entryLimit=50&copyDescriptions=true&copyCustomFields=true&copyCustomStatuses=true&copyResponsibles=true&rescheduleMode=Start&rescheduleDate=$date");
    
    $headers = array();
    $headers[] = 'Authorization: bearer ' . ACCESS_KEY;
    $headers[] = 'Content-Type: application/x-www-form-urlencoded';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    
    $result = json_decode(curl_exec($ch), true);
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
    

    block_receipts::update_project_ID($project_ID,$result['data'][0]['id']);
    
    return $result;
}

function wrike_get_project_by_ID($project_ID){
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();
    
    curl_setopt($ch, CURLOPT_URL, "https://www.wrike.com/api/v4/folders/$project_ID");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'GET');
    
    
    $headers = array();
    $headers[] = 'Authorization: bearer ' . ACCESS_KEY;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    $result = json_decode(curl_exec($ch), true);
    curl_close($ch);
    
    return $result;
}

function wrike_delete_project_by_ID($project_ID){
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();
    
    curl_setopt($ch, CURLOPT_URL, "https://www.wrike.com/api/v4/folders/$project_ID");
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'DELETE');
    
    
    $headers = array();
    $headers[] = 'Authorization: bearer ' . ACCESS_KEY;
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
    
    $result = curl_exec($ch);
    if ($result){$result = json_decode($result);}
    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
}
